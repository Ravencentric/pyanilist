[project]
name = "pyanilist"
version = "0.6.2"
description = "A Python wrapper for the AniList API."
authors = [{ name = "Ravencentric", email = "me@ravencentric.cc" }]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
keywords = ["anilist", "anime", "python"]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "boltons>=24.1.0",
    "httpx>=0.27.2",
    "pycountry>=24.6.1",
    "pydantic>=2.9.2",
    "pydantic-extra-types>=2.10.0",
    "stringenum>=0.6.0",
    "typing-extensions>=4.12.2",
]

[project.urls]
Documentation = "https://pyanilist.ravencentric.cc"
Repository = "https://github.com/Ravencentric/pyanilist"

[dependency-groups]
docs = [
    "mkdocs-autorefs>=1.4.1",
    "mkdocs-material>=9.6.9",
    "mkdocstrings[python]>=0.29.0",
]
lint = ["mypy>=1.15.0", "ruff>=0.11.2", "types-boltons>=25.0.0.20250304"]
test = [
    "coverage>=7.7.1",
    "docstring-parser>=0.16",
    "pytest>=8.3.5",
    "pytest-httpx>=0.34.0",
    "pytest-recording>=0.13.2",
    "tomli>=2.1.0",
]
dev = [
    { include-group = "tests" },
    { include-group = "docs" },
    { include-group = "lints" },
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ["I", "DTZ", "RUF", "UP", "N", "D4"]
fixable = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
strict = true
pretty = true
enable_error_code = ["ignore-without-code"]

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.coverage.run]
omit = ["src/pyanilist/_version.py", "src/pyanilist/_compat.py", "tests/*"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:", # Only used for type-hints
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]
